import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.metrics.pairwise import cosine_similarity

data = {
    'Movie': ['Inception', 'Interstellar', 'The Dark Knight', 'Titanic', 'Avatar'],
    'Genre': ['Sci-Fi Thriller', 'Sci-Fi Drama', 'Action Thriller', 'Romance Drama', 'Sci-Fi Adventure']
}
df = pd.DataFrame(data)

vectorizer = CountVectorizer()
genre_matrix = vectorizer.fit_transform(df['Genre'])

cosine_sim = cosine_similarity(genre_matrix)

def recommend(movie_name, df, similarity_matrix):
    if movie_name not in df['Movie'].values:
        return "Movie not found in dataset!"
    idx = df.index[df['Movie'] == movie_name][0]
    scores = sorted(enumerate(similarity_matrix[idx]), key=lambda x: x[1], reverse=True)
    recommended_movies = [df.iloc[i[0]]['Movie'] for i in scores[1:3]]  # Get top 2 recommendations
    return recommended_movies

#EXAMPLE_USAGE                        
movie_to_search = 'Inception'
recommendations = recommend(movie_to_search, df, cosine_sim)
print(f"Movies similar to '{movie_to_search}': {recommendations}")

for movie in df['Movie']:
    print(f"Movies similar to '{movie}': {recommend(movie, df, cosine_sim)}")
